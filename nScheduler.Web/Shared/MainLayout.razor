@inherits LayoutComponentBase
@using System.Security.Claims
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<Layout ShowFooter="false" SideWidth="0" IsPage="true" IsFullSide="true"
        ShowCollapseBar="true" IsFixedHeader="true" IsFixedFooter="true"
        UseTabSet="true" Menus="@menuItems" TabDefaultUrl="/" NotFoundTabText="空白页面">
    <NotAuthorized>
        <RedirectToLogin></RedirectToLogin>
    </NotAuthorized>
    <NotFound>
        <p role="alert">当前页面正在建设中...</p>
    </NotFound>
    <Header>
        <span class="ms-3 flex-fill">nScheduler任务调度中心</span>
        <Logout ImageUrl="icon-192.png" DisplayName="@Context?.UserName" UserName="@Context?.UserId">
            <LinkTemplate>
                <LogoutLink Url="/logout" />
            </LinkTemplate>
        </Logout>
    </Header>
    <Side>
        <div class="layout-banner">
            <img class="layout-logo" src="icon-192.png" />
            <div class="layout-title">
                <span>nScheduler</span>
            </div>
        </div>
    </Side>
    <Main>
        @Body
    </Main>
</Layout>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationStateTask { get; set; }

    private BootstrapAppContext? Context { get; set; }

    private List<MenuItem> menuItems { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var auth = await authenticationStateTask!;
        if (auth.User.Claims == null || auth.User.Claims.Count() == 0) return;
        Context = new BootstrapAppContext(auth);
        if (Context.UserName.IsEmpty()) return;

        ReloadMenus();
    }

    private void ReloadMenus()
    {
        menuItems.Add(new MenuItem("首页", "/", "fas fa-house"));
        menuItems.Add(new MenuItem("作业管理", "", "fas fa-file")
        {
            Items = new List<MenuItem>() {
                new MenuItem("新增作业", "/job/create", "fas fa-file-circle-plus"),
                new MenuItem("作业管理","/job/page","fas fa-file-code"),
                new MenuItem("作业日志", "/job/log","fas fa-file-lines")
            },
            IsCollapsed = false
        });
        var cfgMenus = new List<MenuItem>() {
            new MenuItem("参数配置","/cfg/param","fas fa-hammer"),
            new MenuItem("消息配置","/cfg/msg","fas fa-message")
        };
        if (Context!.Role == UserRole.Manager || Context!.Role == UserRole.Admin)
            cfgMenus.Add(new MenuItem("镜像配置", "/cfg/img", "fas fa-book"));
        if (Context!.Role == UserRole.Admin)
            cfgMenus.Add(new MenuItem("用户管理", "/user/usr", "fas fa-user-tie"));
        menuItems.Add(new MenuItem("配置管理", "", "fas fa-gear")
        {
            Items = new List<MenuItem>(cfgMenus),
            IsCollapsed = false
        });
    }
}